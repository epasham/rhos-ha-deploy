# 2 how-tos:
# part 1: mariadb A/P with nfs
# part 2: galera A/A (needs haproxy.cfg changes for the backend entry!)

rhos5-db1|rhos5-db2|rhos5-db3:

yum install -y mariadb mariadb-server nfs-utils

mkdir -p /srv/rhos5/db

systemctl enable pcsd
systemctl start pcsd

pcs cluster auth rhos5-db1 rhos5-db2 rhos5-db3 -u hacluster -p cluster --force

rhos5-db1:

pcs cluster setup --name rhos5-db rhos5-db1 rhos5-db2 rhos5-db3
pcs cluster enable --all
pcs cluster start --all

sleep 30

pcs stonith create db1-fence fence_xvm multicast_address=225.0.0.7 pcmk_host_list=rhos5-db1
pcs stonith create db2-fence fence_xvm multicast_address=225.0.0.8 pcmk_host_list=rhos5-db2
pcs stonith create db3-fence fence_xvm multicast_address=225.0.0.9 pcmk_host_list=rhos5-db3

pcs   resource create  db-fs Filesystem device="mrg-01:/srv/rhos5/db"   directory="/var/lib/mysql"  fstype="nfs" options="v3" --group db-group

# On the node running mysql:

cat > /var/lib/mysql/my.cnf << EOF
[mysqld]
skip-name-resolve=1
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
symbolic-links=0

[mysqld_safe]
log-error=/var/log/mariadb/mariadb.log
pid-file=/var/run/mariadb/mariadb.pid
EOF

pcs resource create maria-db mysql config=/var/lib/mysql/my.cnf enable_creation=1 op start timeout=120s --group db-group

# populate the db (see below)

# OUTPUT

[root@rhos5-db1 ~]# pcs status
Cluster name: rhos5-db
Last updated: Fri Jun  6 08:59:47 2014
Last change: Thu Jun  5 07:30:13 2014 via crm_resource on rhos5-db2
Stack: corosync
Current DC: rhos5-db2 (2) - partition with quorum
Version: 1.1.10-29.el7-368c726
3 Nodes configured
5 Resources configured


Online: [ rhos5-db1 rhos5-db2 rhos5-db3 ]

Full list of resources:

 db1-fence      (stonith:fence_xvm):    Started rhos5-db2 
 db2-fence      (stonith:fence_xvm):    Started rhos5-db3 
 db3-fence      (stonith:fence_xvm):    Started rhos5-db1 
 Resource Group: db-group
     db-fs      (ocf::heartbeat:Filesystem):    Started rhos5-db2 
     maria-db   (ocf::heartbeat:mysql): Started rhos5-db2 

PCSD Status:
  rhos5-db1: Online
  rhos5-db2: Online
  rhos5-db3: Online

Daemon Status:
  corosync: active/enabled
  pacemaker: active/enabled
  pcsd: active/enabled

======================== GALERA (WIP) ====================

== transition ==

stop haproxy so no more incoming db change

mysqldump --opt --events --all-databases > /srv/rhos5/configs/openstack.sql

pcs cluster stop --all

== ^^^^ this is only useful for me ^^^^ ==

Pacemaker deployment
https://github.com/davidvossel/phd/blob/master/scenarios/galera-basic.scenario


# HACK OF DEATH TILL WE HAVE PACKAGES
rm -f /usr/lib/ocf/resource.d/heartbeat/galera
wget https://raw.githubusercontent.com/davidvossel/resource-agents/galera-agent/heartbeat/galera -O /usr/lib/ocf/resource.d/heartbeat/galera
chmod 755 /usr/lib/ocf/resource.d/heartbeat/galera

rm -f /usr/lib/ocf/lib/heartbeat/mysql-common.sh
wget  https://raw.githubusercontent.com/davidvossel/resource-agents/galera-agent/heartbeat/mysql-common.sh -O /usr/lib/ocf/lib/heartbeat/mysql-common.sh
chmod 755 /usr/lib/ocf/lib/heartbeat/mysql-common.sh


rhos5-db1|rhos5-db2|rhos5-db3:

yum install -y mariadb-galera-server xinetd

cat > /etc/sysconfig/clustercheck << EOF
MYSQL_USERNAME="clustercheck"
MYSQL_PASSWORD="supersecretpasswd"
MYSQL_HOST="localhost"
MYSQL_PORT="3306"
EOF

# NOTE: I am skipping wsrep ssl encryption to save my soul, but it _must_ be enabled

cat > /etc/my.cnf.d/galera.cnf << EOF
[mysqld]
skip-name-resolve=1
binlog_format=ROW
default-storage-engine=innodb
innodb_autoinc_lock_mode=2
innodb_locks_unsafe_for_binlog=1
query_cache_size=0
query_cache_type=0
bind-address=$(ip addr show dev eth1 scope global | grep inet | sed -e 's#.*inet ##g' -e 's#/.*##g')

wsrep_provider=/usr/lib64/galera/libgalera_smm.so
wsrep_cluster_name="galera_cluster"
wsrep_slave_threads=1
wsrep_certify_nonPK=1
wsrep_max_ws_rows=131072
wsrep_max_ws_size=1073741824
wsrep_debug=0
wsrep_convert_LOCK_to_trx=0
wsrep_retry_autocommit=1
wsrep_auto_increment_control=1
wsrep_drupal_282555_workaround=0
wsrep_causal_reads=0
wsrep_notify_cmd=
wsrep_sst_method=rsync
EOF

cat > /etc/xinetd.d/galera-monitor << EOF
service galera-monitor
{
        port            = 9200
        disable         = no
        socket_type     = stream
        protocol        = tcp
        wait            = no
        user            = root
        group           = root
        groups          = yes
        server          = /usr/bin/clustercheck
        type            = UNLISTED
        per_source      = UNLIMITED
        log_on_success = 
        log_on_failure = HOST
        flags           = REUSE
}
EOF

systemctl enable xinetd
systemctl start xinetd

systemctl enable pcsd
systemctl start pcsd

pcs cluster auth rhos5-db1 rhos5-db2 rhos5-db3 -u hacluster -p cluster --force

rhos5-db1:

pcs cluster setup --name rhos5-db rhos5-db1 rhos5-db2 rhos5-db3
pcs cluster enable --all
pcs cluster start --all

sleep 30

pcs stonith create db1-fence fence_xvm multicast_address=225.0.0.7 pcmk_host_list=rhos5-db1
pcs stonith create db2-fence fence_xvm multicast_address=225.0.0.8 pcmk_host_list=rhos5-db2
pcs stonith create db3-fence fence_xvm multicast_address=225.0.0.9 pcmk_host_list=rhos5-db3

pcs resource create galera galera enable_creation=true wsrep_cluster_address="gcomm://rhos5-db1,rhos5-db2,rhos5-db3" meta master-max=3 -master

# this is useful only for migrating from mysql
mysql < /srv/rhos5/configs/openstack.sql 
mysql
SELECT user,host FROM mysql.user;
FLUSH PRIVILEGES;
quit

# required for clustercheck to work
mysql -e "CREATE USER 'clustercheck'@'localhost' IDENTIFIED BY 'supersecretpasswd';"

# test
rhos5-db1|rhos5-db2|rhos5-db3:

clustercheck

# verify sync is done
mysql
SHOW STATUS LIKE 'wsrep%';
quit

# populate the db on fresh install (see below) 

# OUTPUT

[root@rhos5-db2 ~]# pcs status
Cluster name: rhos5-db
Last updated: Thu Jun 26 12:27:27 2014
Last change: Thu Jun 26 12:20:33 2014 via cibadmin on rhos5-db1
Stack: corosync
Current DC: rhos5-db1 (1) - partition with quorum
Version: 1.1.10-31.el7_0-368c726
3 Nodes configured
6 Resources configured


Online: [ rhos5-db1 rhos5-db2 rhos5-db3 ]

Full list of resources:

 db1-fence      (stonith:fence_xvm):    Started rhos5-db1 
 db2-fence      (stonith:fence_xvm):    Started rhos5-db2 
 db3-fence      (stonith:fence_xvm):    Started rhos5-db3 
 Master/Slave Set: galera-master [galera]
     Masters: [ rhos5-db1 rhos5-db2 rhos5-db3 ]

PCSD Status:
  rhos5-db1: Online
  rhos5-db2: Online
  rhos5-db3: Online

Daemon Status:
  corosync: active/enabled
  pacemaker: active/enabled
  pcsd: active/enabled


# common
mysql mysql
drop user ''@'rhos5-db1.vmnet.mpc.lab.eng.bos.redhat.com';
drop user 'root'@'rhos5-db1.vmnet.mpc.lab.eng.bos.redhat.com';
GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED by 'mysqltest' WITH GRANT OPTION;
CREATE DATABASE keystone;
GRANT ALL ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'keystonetest';
CREATE DATABASE glance;
GRANT ALL ON glance.* TO 'glance'@'%' IDENTIFIED BY 'glancetest';
CREATE DATABASE cinder;
GRANT ALL ON cinder.* TO 'cinder'@'%' IDENTIFIED BY 'cindertest';
CREATE DATABASE ovs_neutron;
GRANT ALL ON ovs_neutron.* TO 'neutron'@'%' IDENTIFIED BY 'neutrontest';
CREATE DATABASE nova;
GRANT ALL ON nova.* TO 'nova'@'%' IDENTIFIED BY 'novatest';
CREATE DATABASE heat;
GRANT ALL ON heat.* TO 'heat'@'%' IDENTIFIED BY 'heattest';
FLUSH PRIVILEGES;
quit
mysqladmin flush-hosts

